install.packages("swirl")
library("swirl", lib.loc="~/R/R-3.3.2/library")
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library("swirl", lib.loc="~/R/R-3.3.2/library")
swirl()
?read.csv
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-5:20
select(cran, -(X:size))
info()
select(cran, -(X:size))
filter(cran, package == "swirl")
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
filter(cran, size > 100500, r_os == "linux-gnu")
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
cran
?group_by
by_package
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
summarize(by_package, mean(size))
setwd("E:/Google Drive/My_Training/Coursera/Getting and Cleaning Data/Getting and Cleaning Data Course Project")
### --- Download Data and Extract to a Directory --- ###
### ------------------------------------------------ ###
dataFile <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
dir.create('UCI HAR Dataset')
download.file(dataFile, 'UCI-HAR-dataset.zip', method='curl')
unzip('./UCI-HAR-dataset.zip')
### --- STEP 1:   Merges the training and the test sets to create one data set.
### ------------------------------------------------ ###
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subTrain.txt')
subTest <- read.table('./UCI HAR Dataset/test/subTest.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
merged <- rbind(train, test)
### --- STEP 2: Extracts only the measurements on the mean
### --- and standard deviation for each measurement.
### --------------------------------------------------- ###
mean_std <- grepl("mean\\(\\)", names(merged)) | grepl("std\\(\\)", names(merged))
mean_std[1:2] <- TRUE
merged <- merged[, mean_std]
### --- STEP 3: Uses descriptive activity names
### --- to name the activities in the data set.
### --------------------------------------------------- ###
names(subTrain) <- "subjectID"
names(subTest) <- "subjectID"
names(X_train) <- featureN$V2
names(X_test) <- featureN$V2
names(y_train) <- "activity"
names(y_test) <- "activity"
### --- STEP 4: Appropriately labels the data set
### --- with descriptive variable names.
### --------------------------------------------------- ###
merged$activity <- factor(merged$activity,
labels=c("Walking",
"GoingUpstairs",
"GoingDownstairs",
"SittingDown",
"Standing",
"LayingDown"))
### ---  STEP 5:  Create Tidy Dataset            --- ###
### ------------------------------------------------ ###
formatedData <- melt(merged, id=c("subjectID","activity"))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
write.csv(tidyData, "tidy.csv", row.names=FALSE)
### --- Download Data and Extract to a Directory --- ###
### ------------------------------------------------ ###
dataFile <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
dir.create('UCI HAR Dataset')
download.file(dataFile, 'UCI-HAR-dataset.zip', method='curl')
unzip('./UCI-HAR-dataset.zip')
### --- STEP 1:   Merges the training and the test sets to create one data set.
### ------------------------------------------------ ###
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subTrain.txt')
subTest <- read.table('./UCI HAR Dataset/test/subTest.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
merged <- rbind(train, test)
### --- STEP 2: Extracts only the measurements on the mean
### --- and standard deviation for each measurement.
### --------------------------------------------------- ###
mean_std <- grepl("mean\\(\\)", names(merged)) | grepl("std\\(\\)", names(merged))
mean_std[1:2] <- TRUE
merged <- merged[, mean_std]
### --- STEP 3: Uses descriptive activity names
### --- to name the activities in the data set.
### --------------------------------------------------- ###
names(subTrain) <- "subjectID"
names(subTest) <- "subjectID"
names(X_train) <- featureN$V2
names(X_test) <- featureN$V2
names(y_train) <- "activity"
names(y_test) <- "activity"
### --- STEP 4: Appropriately labels the data set
### --- with descriptive variable names.
### --------------------------------------------------- ###
merged$activity <- factor(merged$activity,
labels=c("Walking",
"GoingUpstairs",
"GoingDownstairs",
"SittingDown",
"Standing",
"LayingDown"))
### ---  STEP 5:  Create Tidy Dataset            --- ###
### ------------------------------------------------ ###
formatedData <- melt(merged, id=c("subjectID","activity"))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
write.csv(tidyData, "tidy.csv", row.names=FALSE)
### --- STEP 1:   Merges the training and the test sets to create one data set.
### ------------------------------------------------ ###
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subject_Train.txt')
subTest <- read.table('./UCI HAR Dataset/test/subject_Test.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
merged <- rbind(train, test)
mean_std <- grepl("mean\\(\\)", names(merged)) | grepl("std\\(\\)", names(merged))
mean_std[1:2] <- TRUE
merged <- merged[, mean_std]
names(subTrain) <- "subjectID"
names(subTest) <- "subjectID"
names(X_train) <- featureN$V2
names(X_test) <- featureN$V2
names(y_train) <- "activity"
names(y_test) <- "activity"
merged$activity <- factor(merged$activity,
labels=c("Walking",
"GoingUpstairs",
"GoingDownstairs",
"SittingDown",
"Standing",
"LayingDown"))
merged$activity <- factor(merged$activity,
labels=c("Walking",
"GoingUpstairs",
"GoingDownstairs",
"SittingDown",
"Standing",
"LayingDown"))
assignLabel$activity <- factor(assignLabel$activity,
labels=c('Walking',
'GoingUpstairs',
'GoingDownstairs',
'SittingDown',
'Standing',
'LayingDown'))
combined$activity <- factor(combined$activity,
labels=c('Walking',
'GoingUpstairs',
'GoingDownstairs',
'SittingDown',
'Standing',
'LayingDown'))
### --- STEP 4: Appropriately labels the data set
### --- with descriptive variable names.
### --------------------------------------------------- ###
combined$activity <- factor(combined$activity,
labels=c('Walking',
'GoingUpstairs',
'GoingDownstairs',
'SittingDown',
'Standing',
'LayingDown'))
### --- STEP 4: Appropriately labels the data set
### --- with descriptive variable names.
### --------------------------------------------------- ###
merged$activity <- factor(merged$activity,
labels=c('Walking',
'GoingUpstairs',
'GoingDownstairs',
'SittingDown',
'Standing',
'LayingDown'))
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subject_Train.txt')
subTest <- read.table('./UCI HAR Dataset/test/subject_Test.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
merged <- rbind(train, test)
### --- STEP 2: Extracts only the measurements on the mean
### --- and standard deviation for each measurement.
### --------------------------------------------------- ###
mean_std <- grepl("mean\\(\\)", names(merged)) | grepl("std\\(\\)", names(merged))
mean_std[1:2] <- TRUE
merged <- merged[, mean_std]
View(merged)
View(merged)
View(train)
View(train)
View(X_test)
View(X_test)
View(merged)
View(merged)
names(subTrain) <- 'subjectID'
names(subTest) <- 'subjectID'
names(X_train) <- featureN$V2
names(X_test) <- featureN$V2
names(y_train) <- 'activity'
names(y_test) <- 'activity'
mean_std <- grepl("mean\\(\\)", names(merged)) | grepl("std\\(\\)", names(merged))
mean_std[1:2] <- TRUE
merged <- merged[, mean_std]
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subject_Train.txt')
subTest <- read.table('./UCI HAR Dataset/test/subject_Test.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
merged <- rbind(train, test)
View(X_train)
View(X_train)
View(X_test)
View(X_test)
View(subTrain)
View(subTrain)
View(train)
View(train)
View(train)
View(train)
View(test)
View(test)
View(merged)
View(merged)
merged$activity <- factor(merged$activity,
labels=c('Walking',
'GoingUpstairs',
'GoingDownstairs',
'SittingDown',
'Standing',
'LayingDown'))
merged$activity <- factor(merged$activity,
labels=c("Walking",
'GoingUpstairs',
'GoingDownstairs',
'SittingDown',
'Standing',
'LayingDown'))
merged$activity <- factor(merged$activity,
labels=c("Walking",
'GoingUpstairs'))
### ---  STEP 5:  Create Tidy Dataset            --- ###
### ------------------------------------------------ ###
formatedData <- melt(merged, id=c('subjectID','activity'))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
write.csv(tidyData, 'tidy.csv', row.names=FALSE)
formatedData <- melt(merged, id=c('subjectID','activity'))
setwd("E:/Google Drive/My_Training/GitHub/Getting and Cleaning Data Course Project")
### --- STEP 1:   Merges the training and the test sets to create one data set.
### ------------------------------------------------ ###
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subject_Train.txt')
subTest <- read.table('./UCI HAR Dataset/test/subject_Test.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
### --- STEP 3: Uses descriptive activity names
### --- to name the activities in the data set.
### --------------------------------------------------- ###
names(subTrain) <- 'subjectID'
names(subTest) <- 'subjectID'
names(X_train) <- featureN$V2
names(X_test) <- featureN$V2
names(y_train) <- 'activity'
names(y_test) <- 'activity'
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
allFiles <- rbind(train, test)
### --- STEP 2: Extracts only the measurements on the mean
### --- and standard deviation for each measurement.
### --------------------------------------------------- ###
mean_std <- grepl('mean\\(\\)', names(allFiles)) |
grepl('std\\(\\)', names(allFiles))
mean_std[1:2] <- TRUE
allFiles <- allFiles[, mean_std]
### --- STEP 4: Appropriately labels the data set
### --- with descriptive Activity names.
### --------------------------------------------------- ###
allFiles$activity <- factor(allFiles$activity,
labels=c('Walking','GoingUpstairs','GoingDownstairs','SittingDown','Standing','LayingDown'))
### ---  STEP 5:  Create Tidy Dataset            --- ###
### ------------------------------------------------ ###
formatedData <- melt(allFiles, id=c('subjectID','activity'))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
write.csv(tidyData, 'tidy.csv', row.names=FALSE)
install.packages("melt")
install.packages("meltt")
library("tidyr", lib.loc="~/R/R-3.3.2/library")
library("meltt", lib.loc="~/R/R-3.3.2/library")
### --- STEP 1:   Merges the training and the test sets to create one data set.
### ------------------------------------------------ ###
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subject_Train.txt')
subTest <- read.table('./UCI HAR Dataset/test/subject_Test.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
### --- STEP 3: Uses descriptive activity names
### --- to name the activities in the data set.
### --------------------------------------------------- ###
names(subTrain) <- 'subjectID'
names(subTest) <- 'subjectID'
names(X_train) <- featureN$V2
names(X_test) <- featureN$V2
names(y_train) <- 'activity'
names(y_test) <- 'activity'
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
allFiles <- rbind(train, test)
### --- STEP 2: Extracts only the measurements on the mean
### --- and standard deviation for each measurement.
### --------------------------------------------------- ###
mean_std <- grepl('mean\\(\\)', names(allFiles)) |
grepl('std\\(\\)', names(allFiles))
mean_std[1:2] <- TRUE
allFiles <- allFiles[, mean_std]
### --- STEP 4: Appropriately labels the data set
### --- with descriptive Activity names.
### --------------------------------------------------- ###
allFiles$activity <- factor(allFiles$activity,
labels=c('Walking','GoingUpstairs','GoingDownstairs','SittingDown','Standing','LayingDown'))
### ---  STEP 5:  Create Tidy Dataset            --- ###
### ------------------------------------------------ ###
formatedData <- melt(allFiles, id=c('subjectID','activity'))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
write.csv(tidyData, 'tidy.csv', row.names=FALSE)
setwd("E:/Google Drive/My_Training/GitHub/Getting and Cleaning Data Course Project")
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subject_Train.txt')
subTest <- read.table('./UCI HAR Dataset/test/subject_Test.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
unzip('./UCI-HAR-dataset.zip')
X_train <- read.table('./UCI HAR Dataset/train/X_train.txt')
X_test <- read.table('./UCI HAR Dataset/test/X_test.txt')
subTrain <- read.table('./UCI HAR Dataset/train/subject_Train.txt')
subTest <- read.table('./UCI HAR Dataset/test/subject_Test.txt')
y_train <- read.table('./UCI HAR Dataset/train/y_train.txt')
y_test <- read.table('./UCI HAR Dataset/test/y_test.txt')
featureN <- read.table('./UCI HAR Dataset/features.txt')
### --- STEP 3: Uses descriptive activity names
### --- to name the activities in the data set.
### --------------------------------------------------- ###
names(subTrain) <- 'subjectID'
names(subTest) <- 'subjectID'
names(X_train) <- featureN$V2
names(X_test) <- featureN$V2
names(y_train) <- 'activity'
names(y_test) <- 'activity'
train <- cbind(subTrain, y_train, X_train)
test <- cbind(subTest, y_test, X_test)
allFiles <- rbind(train, test)
mean_std <- grepl('mean\\(\\)', names(allFiles)) |
grepl('std\\(\\)', names(allFiles))
mean_std[1:2] <- TRUE
allFiles <- allFiles[, mean_std]
allFiles$activity <- factor(allFiles$activity,
labels=c('Walking','GoingUpstairs','GoingDownstairs','SittingDown','Standing','LayingDown'))
formatedData <- melt(allFiles, id=c('subjectID','activity'))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
write.csv(tidyData, 'tidy.csv', row.names=FALSE)
library("reshape2", lib.loc="~/R/R-3.3.2/library")
formatedData <- melt(allFiles, id=c('subjectID','activity'))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
write.csv(tidyData, 'tidy.csv', row.names=FALSE)
install.packages("dcast")
allFiles$activity <- factor(allFiles$activity,
labels=c('Walking','GoingUpstairs','GoingDownstairs','SittingDown','Standing','LayingDown'))
formatedData <- melt(allFiles, id=c('subjectID','activity'))
install.packages("reshape")
library("reshape", lib.loc="~/R/R-3.3.2/library")
formatedData <- melt(allFiles, id=c('subjectID','activity'))
tidyData <- dcast(formatedData, subjectID+activity ~ variable, mean)
detach("package:reshape", unload=TRUE)
library('reshape')
library("reshape2", lib.loc="~/R/R-3.3.2/library")
library("reshape2", lib.loc="~/R/R-3.3.2/library")
library("reshape2", lib.loc="~/R/R-3.3.2/library")
